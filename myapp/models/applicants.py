from myapp.extensions import db
from sqlalchemy import BigInteger, event

class Applicant(db.Model):
    __tablename__ = 'applicants'

    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable = False)
    dob = db.Column(db.Date)
    email = db.Column(db.String(100), unique = True)
    phone_number = db.Column(BigInteger, unique = True)
    gender = db.Column(db.String(10))
    marital_status = db.Column(db.String(50))
    native_place = db.Column(db.String(100))

    graduation_year = db.Column(db.Integer, nullable=True)
    is_fresher = db.Column(db.Boolean)
    qualification = db.Column(db.String(100))
    current_internship = db.Column(db.Boolean)
    internship_duration = db.Column(db.Integer, nullable=True)
    paid_internship = db.Column(db.Boolean)
    stipend = db.Column(db.Integer, nullable=True)
    current_location = db.Column(db.String(100))
    work_location = db.Column(db.String(100))
    experience = db.Column(db.String(100))
    referenced_from = db.Column(db.String(100))
    linkedin_profile = db.Column(db.String(255))
    github_profile = db.Column(db.String(255))
    is_kanaka_employee = db.Column(db.Boolean, default = False)
    current_company = db.Column(db.String(100))
    current_job_position = db.Column(db.String(100))
    current_ctc = db.Column(db.Integer, nullable=True)
    expected_ctc = db.Column(db.Integer, nullable=True)
    notice_period = db.Column(db.Integer, nullable=True)
    tenure_at_current_company = db.Column(db.Text)
    current_offers_yes_no = db.Column(db.Boolean)
    current_offers_description = db.Column(db.Text)
    reason_for_change = db.Column(db.Text)
    last_applied = db.Column(db.Date)
    current_stage = db.Column(db.Text)
    cv_file_path = db.Column(db.Text)
    comments = db.Column(db.Text)
    status = db.Column(db.String(50), default='Applied')
    uploaded_by = db.Column(db.Integer, db.ForeignKey('users.id'))
    is_referred = db.Column(db.Boolean, default = False)
    referred_by = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=True)
    job_id = db.Column(db.Integer, db.ForeignKey('jobrequirement.id'), nullable=True)

    history_entries = db.relationship("RecruitmentHistory", back_populates="applicant", cascade="all, delete-orphan")
    referred_candidate = db.relationship("Referral", back_populates="applicant")
    interviews = db.relationship('Interview', back_populates='applicant')
    uploader = db.relationship("User", foreign_keys=[uploaded_by], back_populates="uploaded_applicants")
    referrer = db.relationship("User", foreign_keys=[referred_by], back_populates="referred_applicants")
    job = db.relationship("JobRequirement", foreign_keys=[job_id],backref="applicants")
    test_results = db.relationship("TestResult", back_populates="applicant")
